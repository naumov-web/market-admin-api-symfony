version: '2.1'

networks:
  default-network:
    driver: bridge

services:

  nginx:
    build:
      context: .
      dockerfile: deployment/local/docker/nginx/Dockerfile
    ports:
      - "${DOCKER_NGINX_PORT}:80"
    volumes:
      - ./:/var/www
    depends_on:
      - php-fpm
    networks:
      - default-network

  php-fpm:
    build:
      context: .
      dockerfile: deployment/local/docker/php-fpm/Dockerfile
    volumes:
      - ./:/var/www
    depends_on:
      pgsql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    container_name: market_api_symfony_php_fpm
    networks:
      - default-network

  worker:
    build:
      context: .
      dockerfile: deployment/local/docker/worker/Dockerfile
    volumes:
      - ./:/var/www
    depends_on:
      pgsql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    container_name: market_api_symfony_worker
    networks:
      - default-network

  pgsql:
    image: postgres:11.3
    ports:
      - "${DOCKER_PGSQL_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./persistent_data/pgsql:/var/lib/postgresql/data
    networks:
      - default-network

  rabbitmq:
    image: rabbitmq:3.7
    ports:
      - "${DOCKER_RABBITMQ_PORT}:5672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
    networks:
      - default-network

  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - default-network

  elastic:
    image: elasticsearch:7.9.3
    container_name: market_api_symfony_elastic
    restart: unless-stopped
    tty: true
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
    volumes:
      - ./persistent_data/elastic:/usr/share/elasticsearch/data
    ports:
      - "${DOCKER_ELASTIC_PORT}:9200"
    networks:
      - default-network