swagger: "2.0"
info:
  title: "Market admin API"
  description: "Docs for Market admin API"
  version: "1.0.0"
schemes:
  - "http"
host: 127.0.0.1:31080
basePath: /api

paths:

  /login:
    post:
      tags:
        - "login"
      summary: "Login user"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "LoginRequestBody"
          in: "body"
          description: "Login request body"
          required: true
          schema:
            $ref: "#/definitions/LoginRequestModel"
      responses:
        201:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/LoginResponseModel"
        401:
          description: "Unauthorized"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /product-categories:
    get:
      tags:
        - "product categories"
      summary: "Get product categories list"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "limit"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "offset"
          type: "integer"
          description: "Offset of items in response"
        - in: "query"
          name: "sort_by"
          type: "string"
          description: "Sort by column"
          enum:
            - "id"
            - "name"
        - in: "query"
          name: "sort_direction"
          type: "string"
          description: "Sort direction"
          enum:
            - "asc"
            - "desc"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ProductCategoriesListResponseModel"
        401:
          description: "Unauthorized"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"
    post:
      tags:
        - "product categories"
      summary: "Create product category"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "CreateProductCategoryRequestBody"
          in: "body"
          description: "Create product category request body"
          required: true
          schema:
            $ref: "#/definitions/CreateProductCategoryRequestModel"
      responses:
        201:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /product-categories/{product_category}:
    put:
      tags:
        - "product categories"
      summary: "Update product category"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "product_category"
          type: "integer"
          required: true
          description: "Id of product category"
        - name: "UpdateProductCategoryRequestBody"
          in: "body"
          description: "Update product category request body"
          required: true
          schema:
            $ref: "#/definitions/UpdateProductCategoryRequestModel"
      responses:
        204:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        404:
          description: "Not found"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"
    delete:
      tags:
        - "product categories"
      summary: "Delete product category"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "product_category"
          type: "integer"
          required: true
          description: "Id of product category"
      responses:
        204:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        404:
          description: "Not found"
        500:
          description: "Internal server error"

  /handbooks/all:
    get:
      tags:
        - "handbooks"
      summary: "Get all handbooks"
      description: ""
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/HandbooksResponseModel"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"

  /product-parameters:
    get:
      tags:
        - "product parameters"
      summary: "Get product parameters list"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "limit"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "offset"
          type: "integer"
          description: "Offset of items in response"
        - in: "query"
          name: "sort_by"
          type: "string"
          description: "Sort by column"
          enum:
            - "id"
            - "name"
            - "type_id"
        - in: "query"
          name: "sort_direction"
          type: "string"
          description: "Sort direction"
          enum:
            - "asc"
            - "desc"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ProductParametersListResponseModel"
        401:
          description: "Unauthorized"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"
    post:
      tags:
        - "product parameters"
      summary: "Create product parameter"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "CreateProductParameterRequestBody"
          in: "body"
          description: "Create product parameter request body"
          required: true
          schema:
            $ref: "#/definitions/CreateProductParameterRequestModel"
      responses:
        201:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /product-parameters/{product_parameter}:
    put:
      tags:
        - "product parameters"
      summary: "Update product parameter"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "product_parameter"
          type: "integer"
          required: true
          description: "Id of product parameter"
        - name: "UpdateProductParameterRequestBody"
          in: "body"
          description: "Update product parameter request body"
          required: true
          schema:
            $ref: "#/definitions/UpdateProductParameterRequestModel"
      responses:
        204:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        404:
          description: "Not found"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"
    delete:
      tags:
        - "product parameters"
      summary: "Delete product parameter"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "product_parameter"
          type: "integer"
          required: true
          description: "Id of product parameter"
      responses:
        204:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        404:
          description: "Not found"
        500:
          description: "Internal server error"

  /products:
    get:
      tags:
        - "products"
      summary: "Get products list"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "limit"
          type: "integer"
          description: "Limit of items in response"
        - in: "query"
          name: "offset"
          type: "integer"
          description: "Offset of items in response"
        - in: "query"
          name: "sort_by"
          type: "string"
          description: "Sort by column"
          enum:
            - "id"
            - "name"
            - "price"
        - in: "query"
          name: "sort_direction"
          type: "string"
          description: "Sort direction"
          enum:
            - "asc"
            - "desc"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ProductsListResponseModel"
        401:
          description: "Unauthorized"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"
    post:
      tags:
        - "products"
      summary: "Create product"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "CreateProductRequestBody"
          in: "body"
          description: "Create product request body"
          required: true
          schema:
            $ref: "#/definitions/CreateProductRequestModel"
      responses:
        201:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /products/{product}:
    put:
      tags:
        - "products"
      summary: "Update product"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "product"
          type: "integer"
          required: true
          description: "Id of product"
        - name: "UpdateProductRequestBody"
          in: "body"
          description: "Update product request body"
          required: true
          schema:
            $ref: "#/definitions/UpdateProductRequestModel"
      responses:
        204:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
    delete:
      tags:
        - "products"
      summary: "Delete product"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "product"
          type: "integer"
          required: true
          description: "Id of product"
      responses:
        204:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        404:
          description: "Not found"
        500:
          description: "Internal server error"

definitions:

  HandbookItemResponseModel:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"

  ListMetaResponseModel:
    type: "object"
    properties:
      count:
        type: "integer"

  LoginRequestModel:
    type: "object"
    required:
      - "email"
      - "password"
    properties:
      email:
        type: "string"
      password:
        type: "string"

  LoginResponseModel:
    type: "object"
    properties:
      token:
        type: "string"

  CreateProductCategoryRequestModel:
    type: "object"
    required:
      - "name"
    properties:
      name:
        type: "string"

  ProductCategoriesListResponseModel:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/ProductCategoryResponseModel"
      meta:
        type: "object"
        $ref: "#/definitions/ListMetaResponseModel"

  ProductCategoryResponseModel:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"

  UpdateProductCategoryRequestModel:
    type: "object"
    required:
      - "name"
    properties:
      name:
        type: "string"

  CreateProductRequestModel:
    type: "object"
    required:
      - "name"
      - "product_category_id"
      - "price"
    properties:
      name:
        type: "string"
      product_category_id:
        type: "integer"
      description:
        type: "string"
      price:
        type: "number"
      files:
        type: "array"
        items:
          $ref: "#/definitions/CreateFileRequestModel"
      parameters:
        type: "array"
        items:
          $ref: "#/definitions/CreateProductParameterValueRequestModel"

  CreateFileRequestModel:
    type: "object"
    required:
      - "name"
      - "mime"
      - "content"
    properties:
      name:
        type: "string"
      mime:
        type: "string"
      content:
        type: "string"
      is_main:
        type: "boolean"

  CreateProductParameterValueRequestModel:
    type: "object"
    required:
      - "product_parameter_id"
      - "value"
    properties:
      product_parameter_id:
        type: "integer"
      value:
        type: "string"

  CreateProductParameterRequestModel:
    type: "object"
    required:
      - "name"
      - "type_id"
    properties:
      name:
        type: "string"
      type_id:
        type: "integer"

  HandbooksResponseModel:
    type: "object"
    properties:
      parameter_types:
        type: "array"
        items:
          $ref: "#/definitions/HandbookItemResponseModel"

  ProductParametersListResponseModel:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/ProductParameterResponseModel"
        meta:
          type: "object"
          $ref: "#/definitions/ListMetaResponseModel"

  ProductParameterResponseModel:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      type_id:
        type: "integer"
      type_name:
        type: "string"

  UpdateProductParameterRequestModel:
    type: "object"
    required:
      - "name"
      - "type_id"
    properties:
      name:
        type: "string"
      type_id:
        type: "integer"

  ProductsListResponseModel:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/ProductResponseModel"
        meta:
          type: "object"
          $ref: "#/definitions/ListMetaResponseModel"

  ProductResponseModel:
    type: "object"
    properties:
      id:
        type: "integer"
      product_category_id:
        type: "integer"
      product_category_name:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      price:
        type: "number"
      files:
        type: "array"
        items:
          $ref: "#/definitions/FileResponseModel"
      parameters:
        type: "array"
        items:
          $ref: "#/definitions/ProductParameterValueResponseModel"

  FileResponseModel:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      url:
        type: "string"
      mime:
        type: "string"

  ProductParameterValueResponseModel:
    type: "object"
    properties:
      id:
        type: "integer"
      parameter_id:
        type: "integer"
      parameter_name:
        type: "string"
      value:
        type: "string"

  UpdateProductRequestModel:
    type: "object"
    required:
      - "name"
      - "product_category_id"
      - "price"
    properties:
      name:
        type: "string"
      product_category_id:
        type: "integer"
      description:
        type: "string"
      price:
        type: "number"
      file_ids:
        type: "array"
        items:
          type: "integer"
      files:
        type: "array"
        items:
          $ref: "#/definitions/CreateFileRequestModel"
      parameters:
        type: "array"
        items:
          $ref: "#/definitions/CreateProductParameterValueRequestModel"